buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.github.gradle-nexus:publish-plugin:1.1.0'
    }
}

plugins {
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
}

plugins {
    id 'java'
    id "maven-publish"
    id "signing"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
    testImplementation("com.squareup.okhttp3:mockwebserver:4.11.0")
}

test {
    useJUnitPlatform()
}

task getPublishVersionCode(type: Exec) {
    def code = 'git rev-list HEAD --count'.execute().text.trim()
    environment 'VERSION_CODE', code
}

ext.getPublishVersion = { -> return System.getenv("VERSION_NAME") ?: "1.0.0-SNAPSHOT" }

ext.getReleaseRepositoryUrl = { ->
    return System.getenv("RELEASE_REPOSITORY_URL") ?: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
}

ext.getSnapshotRepositoryUrl = { ->
    return System.getenv("SNAPSHOT_REPOSITORY_URL") ?: "https://s01.oss.sonatype.org/content/repositories/snapshots/"
}

ext.getRepositoryStagingId = { -> return System.getenv("NEXUS_PROFILE_ID") }

ext.getRepositoryUsername = { -> return System.getenv("NEXUS_USERNAME") }

ext.getRepositoryPassword = { -> return System.getenv("NEXUS_PASSWORD") }

apply from: "${rootDir}/deploy/deploy.gradle"